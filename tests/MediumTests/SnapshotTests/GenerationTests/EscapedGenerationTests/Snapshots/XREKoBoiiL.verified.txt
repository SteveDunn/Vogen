// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

using Vogen;

namespace @class
{

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.Text.Json.Serialization.JsonConverter(typeof(escapedTestspublic_partial_classConversions_TypeConverterSystemTextJsonConverter))]
[global::Newtonsoft.Json.JsonConverter(typeof(escapedTestspublic_partial_classConversions_TypeConverterNewtonsoftJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(escapedTestspublic_partial_classConversions_TypeConverterTypeConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(escapedTestspublic_partial_classConversions_TypeConverterDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.Guid, Value = { _value }")]
    public partial class escapedTestspublic_partial_classConversions_TypeConverter : global::System.IEquatable<escapedTestspublic_partial_classConversions_TypeConverter>
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly System.Guid _value;
        
public System.Guid Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public escapedTestspublic_partial_classConversions_TypeConverter()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private escapedTestspublic_partial_classConversions_TypeConverter(System.Guid value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static escapedTestspublic_partial_classConversions_TypeConverter From(System.Guid value)
        {
            

            

            escapedTestspublic_partial_classConversions_TypeConverter instance = new escapedTestspublic_partial_classConversions_TypeConverter(value);

            

            return instance;
        }

        public global::System.Boolean Equals(escapedTestspublic_partial_classConversions_TypeConverter other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            // It's possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.
            // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.
            if(!_isInitialized || !other._isInitialized) return false;
	    	
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            return GetType() == other.GetType() && global::System.Collections.Generic.EqualityComparer<System.Guid>.Default.Equals(Value, other.Value);
        }

        public global::System.Boolean Equals(System.Guid primitive) => Value.Equals(primitive);

        public override global::System.Boolean Equals(global::System.Object obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((escapedTestspublic_partial_classConversions_TypeConverter) obj);
        }

        public static global::System.Boolean operator ==(escapedTestspublic_partial_classConversions_TypeConverter left, escapedTestspublic_partial_classConversions_TypeConverter right) => Equals(left, right);
        public static global::System.Boolean operator !=(escapedTestspublic_partial_classConversions_TypeConverter left, escapedTestspublic_partial_classConversions_TypeConverter right) => !Equals(left, right);

        public static global::System.Boolean operator ==(escapedTestspublic_partial_classConversions_TypeConverter left, System.Guid right) => Equals(left.Value, right);
        public static global::System.Boolean operator !=(escapedTestspublic_partial_classConversions_TypeConverter left, System.Guid right) => !Equals(left.Value, right);

        public static global::System.Boolean operator ==(System.Guid left, escapedTestspublic_partial_classConversions_TypeConverter right) => Equals(left, right.Value);
        public static global::System.Boolean operator !=(System.Guid left, escapedTestspublic_partial_classConversions_TypeConverter right) => !Equals(left, right.Value);

        public override global::System.Int32 GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                global::System.Int32 hash = (global::System.Int32) 2166136261;
                hash = (hash * 16777619) ^ Value.GetHashCode();
                hash = (hash * 16777619) ^ GetType().GetHashCode();
                hash = (hash * 16777619) ^ global::System.Collections.Generic.EqualityComparer<System.Guid>.Default.GetHashCode();
                return hash;
            }
        }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        public override global::System.String ToString() => Value.ToString();

        
        class escapedTestspublic_partial_classConversions_TypeConverterSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<escapedTestspublic_partial_classConversions_TypeConverter>
        {
            public override escapedTestspublic_partial_classConversions_TypeConverter Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return escapedTestspublic_partial_classConversions_TypeConverter.From(System.Guid.Parse(reader.GetString()));
            }

            public override void Write(System.Text.Json.Utf8JsonWriter writer, escapedTestspublic_partial_classConversions_TypeConverter value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WriteStringValue(value.Value);
            }
        }

        class escapedTestspublic_partial_classConversions_TypeConverterNewtonsoftJsonConverter : Newtonsoft.Json.JsonConverter
        {
            public override bool CanConvert(System.Type objectType)
            {
                return objectType == typeof(escapedTestspublic_partial_classConversions_TypeConverter);
            }

            public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
            {
                var id = (escapedTestspublic_partial_classConversions_TypeConverter)value;
                serializer.Serialize(writer, id.Value);
            }

            public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
            {
                var guid = serializer.Deserialize<System.Guid?>(reader);
                return guid.HasValue ? escapedTestspublic_partial_classConversions_TypeConverter.From(guid.Value) : null;
            }
        }

        class escapedTestspublic_partial_classConversions_TypeConverterTypeConverter : global::System.ComponentModel.TypeConverter
        {
            public override global::System.Boolean CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(global::System.Guid) || sourceType == typeof(global::System.String) || base.CanConvertFrom(context, sourceType);
            }

            public override global::System.Object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value)
            {
                return value switch
                {
                    global::System.Guid guidValue => escapedTestspublic_partial_classConversions_TypeConverter.From(guidValue),
                    global::System.String stringValue when !global::System.String.IsNullOrEmpty(stringValue) && global::System.Guid.TryParse(stringValue, out var result) => escapedTestspublic_partial_classConversions_TypeConverter.From(result),
                    _ => base.ConvertFrom(context, culture, value),
                };
            }

            public override bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(global::System.Guid) || sourceType == typeof(global::System.String) || base.CanConvertTo(context, sourceType);
            }

            public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value, global::System.Type destinationType)
            {
                if (value is escapedTestspublic_partial_classConversions_TypeConverter idValue)
                {
                    if (destinationType == typeof(global::System.Guid))
                    {
                        return idValue.Value;
                    }

                    if (destinationType == typeof(global::System.String))
                    {
                        return idValue.Value.ToString();
                    }
                }

                return base.ConvertTo(context, culture, value, destinationType);
            }
        }

        public class DapperTypeHandler : global::Dapper.SqlMapper.TypeHandler<escapedTestspublic_partial_classConversions_TypeConverter>
        {
            public override void SetValue(global::System.Data.IDbDataParameter parameter, escapedTestspublic_partial_classConversions_TypeConverter value)
            {
                parameter.DbType = global::System.Data.DbType.Guid;
                parameter.Value = value.Value;
            }

            public override escapedTestspublic_partial_classConversions_TypeConverter Parse(object value)
            {
                return value switch
                {
                    global::System.Guid guidValue => escapedTestspublic_partial_classConversions_TypeConverter.From(guidValue),
                    global::System.String stringValue when !global::System.String.IsNullOrEmpty(stringValue) && global::System.Guid.TryParse(stringValue, out var result) => escapedTestspublic_partial_classConversions_TypeConverter.From(result),
                    _ => throw new global::System.InvalidCastException($"Unable to cast object of type {value.GetType()} to escapedTestspublic_partial_classConversions_TypeConverter"),
                };
            }
        }

        public class EfCoreValueConverter : global::Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter<escapedTestspublic_partial_classConversions_TypeConverter, global::System.Guid>
        {
            public EfCoreValueConverter() : this(null) { }
            public EfCoreValueConverter(global::Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = null)
                : base(
                    vo => vo.Value,
                    value => escapedTestspublic_partial_classConversions_TypeConverter.From(value),
                    mappingHints
                ) { }
        }

        public class LinqToDbValueConverter : global::LinqToDB.Common.ValueConverter<escapedTestspublic_partial_classConversions_TypeConverter, global::System.Guid>
        {
            public LinqToDbValueConverter()
                : base(
                      v => v.Value,
                      p => escapedTestspublic_partial_classConversions_TypeConverter.From(p),
                      handlesNulls: false)
            { }
        }


        internal sealed class escapedTestspublic_partial_classConversions_TypeConverterDebugView
        {
            private readonly escapedTestspublic_partial_classConversions_TypeConverter _t;

            escapedTestspublic_partial_classConversions_TypeConverterDebugView(escapedTestspublic_partial_classConversions_TypeConverter t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "System.Guid";
            public System.Guid Value => _t.Value ;

            public global::System.String Conversions => @"[global::System.Text.Json.Serialization.JsonConverter(typeof(escapedTestspublic_partial_classConversions_TypeConverterSystemTextJsonConverter))]
[global::Newtonsoft.Json.JsonConverter(typeof(escapedTestspublic_partial_classConversions_TypeConverterNewtonsoftJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(escapedTestspublic_partial_classConversions_TypeConverterTypeConverter))]
";
                }
    }
}