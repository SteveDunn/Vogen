// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Supress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

using Vogen;

namespace @class
{

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] 
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.Text.Json.Serialization.JsonConverter(typeof(escapedTestspublic_partial_recordConversions_TypeConverterSystemTextJsonConverter))]
[global::Newtonsoft.Json.JsonConverter(typeof(escapedTestspublic_partial_recordConversions_TypeConverterNewtonsoftJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(escapedTestspublic_partial_recordConversions_TypeConverterTypeConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(escapedTestspublic_partial_recordConversions_TypeConverterDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: @class.record.@struct.@float.decimal, Value = { _value }")]
    public partial record class escapedTestspublic_partial_recordConversions_TypeConverter 
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly @class.record.@struct.@float.decimal _value;
        
        /// <summary>
        /// Gets the underlying <see cref="@class.record.@struct.@float.decimal" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.
        /// </summary>
        public @class.record.@struct.@float.decimal Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            init
            {
                

                

                

                _value = value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public escapedTestspublic_partial_recordConversions_TypeConverter()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private escapedTestspublic_partial_recordConversions_TypeConverter(@class.record.@struct.@float.decimal value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static escapedTestspublic_partial_recordConversions_TypeConverter From(@class.record.@struct.@float.decimal value)
        {
            

            

            escapedTestspublic_partial_recordConversions_TypeConverter instance = new escapedTestspublic_partial_recordConversions_TypeConverter(value);

            

            return instance;
        }

        public static explicit operator escapedTestspublic_partial_recordConversions_TypeConverter(@class.record.@struct.@float.decimal value) => From(value);
        public static explicit operator @class.record.@struct.@float.decimal(escapedTestspublic_partial_recordConversions_TypeConverter value) => value.Value;

        

        // only called internally when something has been deserialized into
        // its primitive type.
        private static escapedTestspublic_partial_recordConversions_TypeConverter Deserialize(@class.record.@struct.@float.decimal value)
        {
            

            

            

            return new escapedTestspublic_partial_recordConversions_TypeConverter(value);
        }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        // record enumerates fields - we just want our Value and to throw if it's not initialized.
        /// <summary>Returns the string representation of the underlying <see cref="@class.@record.@struct.@float.@decimal" />.</summary>
    /// <inheritdoc cref="@class.@record.@struct.@float.@decimal.ToString()" />
    public override global::System.String ToString() => Value.ToString();

        
        class escapedTestspublic_partial_recordConversions_TypeConverterSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<escapedTestspublic_partial_recordConversions_TypeConverter>
        {
            public override escapedTestspublic_partial_recordConversions_TypeConverter Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                var primitive = global::System.Text.Json.JsonSerializer.Deserialize<@class.@record.@struct.@float.@decimal>(ref reader, options);
                return escapedTestspublic_partial_recordConversions_TypeConverter.Deserialize(primitive);
            }

            public override void Write(System.Text.Json.Utf8JsonWriter writer, escapedTestspublic_partial_recordConversions_TypeConverter value, global::System.Text.Json.JsonSerializerOptions options)
            {
                global::System.Text.Json.JsonSerializer.Serialize(writer, value.Value);
            }
        }

        class escapedTestspublic_partial_recordConversions_TypeConverterNewtonsoftJsonConverter : Newtonsoft.Json.JsonConverter
        {
            public override bool CanConvert(System.Type objectType)
            {
                return objectType == typeof(escapedTestspublic_partial_recordConversions_TypeConverter);
            }

            public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
            {
                var id = ((escapedTestspublic_partial_recordConversions_TypeConverter)value).Value;
                serializer.Serialize(writer, id);
            }

            public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
            {
                return escapedTestspublic_partial_recordConversions_TypeConverter.Deserialize(serializer.Deserialize<@class.@record.@struct.@float.@decimal>(reader));
            }
        }

        class escapedTestspublic_partial_recordConversions_TypeConverterTypeConverter : global::System.ComponentModel.TypeConverter
        {
            public override global::System.Boolean CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(@class.@record.@struct.@float.@decimal);
            }
        
            public override global::System.Object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value)
            {
                @class.@record.@struct.@float.@decimal ut = (@class.@record.@struct.@float.@decimal)value;

                return escapedTestspublic_partial_recordConversions_TypeConverter.Deserialize(ut);
            }
        
            public override bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(@class.@record.@struct.@float.@decimal);
            }
        
            public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value, global::System.Type destinationType)
            {
                if (value is escapedTestspublic_partial_recordConversions_TypeConverter idValue)
                {
                    return idValue.Value;
                }
        
                return base.ConvertTo(context, culture, value, destinationType);
            }
        }


        public class DapperTypeHandler : global::Dapper.SqlMapper.TypeHandler<escapedTestspublic_partial_recordConversions_TypeConverter>
        {
            public override void SetValue(global::System.Data.IDbDataParameter parameter, escapedTestspublic_partial_recordConversions_TypeConverter value)
            {
                parameter.Value = global::System.Text.Json.JsonSerializer.Serialize(value.Value);
            }

            public override escapedTestspublic_partial_recordConversions_TypeConverter Parse(object value)
            {
                return value switch
                {
                    global::System.String stringValue =>
                        escapedTestspublic_partial_recordConversions_TypeConverter.Deserialize(global::System.Text.Json.JsonSerializer.Deserialize<Bar>(stringValue)),
                    _ => throw new global::System.InvalidCastException($"Unable to cast object of type {value.GetType()} to escapedTestspublic_partial_recordConversions_TypeConverter"),
                };
            }
        }
        
        public class EfCoreValueConverter : global::Microsoft.EntityFrameworkCore.Storage.ValueConversion.ValueConverter<escapedTestspublic_partial_recordConversions_TypeConverter, global::System.String>
        {
            public EfCoreValueConverter() : this(null) { }
            public EfCoreValueConverter(global::Microsoft.EntityFrameworkCore.Storage.ValueConversion.ConverterMappingHints mappingHints = null)
                : base(
                    vo => global::System.Text.Json.JsonSerializer.Serialize(vo.Value, default(global::System.Text.Json.JsonSerializerOptions)),
                    text => escapedTestspublic_partial_recordConversions_TypeConverter.Deserialize(global::System.Text.Json.JsonSerializer.Deserialize<@class.@record.@struct.@float.@decimal>(text, default(global::System.Text.Json.JsonSerializerOptions))),
                    mappingHints
                ) { }
        }

        public class LinqToDbValueConverter : global::LinqToDB.Common.ValueConverter<escapedTestspublic_partial_recordConversions_TypeConverter, global::System.String>
        {
            public LinqToDbValueConverter()
                : base(
                      v => global::System.Text.Json.JsonSerializer.Serialize(v.Value, default(global::System.Text.Json.JsonSerializerOptions)),
                      p => escapedTestspublic_partial_recordConversions_TypeConverter.Deserialize(global::System.Text.Json.JsonSerializer.Deserialize<@class.@record.@struct.@float.@decimal>(p, default(global::System.Text.Json.JsonSerializerOptions))),
                      handlesNulls: false)
            { }
        }


        internal sealed class escapedTestspublic_partial_recordConversions_TypeConverterDebugView
        {
            private readonly escapedTestspublic_partial_recordConversions_TypeConverter _t;

            escapedTestspublic_partial_recordConversions_TypeConverterDebugView(escapedTestspublic_partial_recordConversions_TypeConverter t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "@class.@record.@struct.@float.@decimal";
            public @class.@record.@struct.@float.@decimal Value => _t.Value ;

            public global::System.String Conversions => @"[global::System.Text.Json.Serialization.JsonConverter(typeof(escapedTestspublic_partial_recordConversions_TypeConverterSystemTextJsonConverter))]
[global::Newtonsoft.Json.JsonConverter(typeof(escapedTestspublic_partial_recordConversions_TypeConverterNewtonsoftJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(escapedTestspublic_partial_recordConversions_TypeConverterTypeConverter))]
";
                }
    }
}