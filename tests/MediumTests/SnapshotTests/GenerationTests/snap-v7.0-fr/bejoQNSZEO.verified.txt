// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Supress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

using Vogen;

namespace Whatever
{

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] 
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.Text.Json.Serialization.JsonConverter(typeof(internal_sealed_partial_recordConversions_NewtonsoftJsonSystemTextJsonConverter))]
[global::Newtonsoft.Json.JsonConverter(typeof(internal_sealed_partial_recordConversions_NewtonsoftJsonNewtonsoftJsonConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(internal_sealed_partial_recordConversions_NewtonsoftJsonDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: int, Value = { _value }")]
    internal sealed partial record class internal_sealed_partial_recordConversions_NewtonsoftJson  :  global::System.IComparable<internal_sealed_partial_recordConversions_NewtonsoftJson>
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly int _value;
        
        /// <summary>
        /// Gets the underlying <see cref="int" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.
        /// </summary>
        public int Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            init
            {
                

                

                

                _value = value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public internal_sealed_partial_recordConversions_NewtonsoftJson()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private internal_sealed_partial_recordConversions_NewtonsoftJson(int value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static internal_sealed_partial_recordConversions_NewtonsoftJson From(int value)
        {
            

            

            internal_sealed_partial_recordConversions_NewtonsoftJson instance = new internal_sealed_partial_recordConversions_NewtonsoftJson(value);

            

            return instance;
        }

        public static explicit operator internal_sealed_partial_recordConversions_NewtonsoftJson(int value) => From(value);
        public static explicit operator int(internal_sealed_partial_recordConversions_NewtonsoftJson value) => value.Value;

        public int CompareTo(internal_sealed_partial_recordConversions_NewtonsoftJson other) => Value.CompareTo(other.Value);

        // only called internally when something has been deserialized into
        // its primitive type.
        private static internal_sealed_partial_recordConversions_NewtonsoftJson Deserialize(int value)
        {
            

            

            

            return new internal_sealed_partial_recordConversions_NewtonsoftJson(value);
        }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        // record enumerates fields - we just want our Value and to throw if it's not initialized.
        /// <summary>Returns the string representation of the underlying <see cref="System.Int32" />.</summary>
    /// <inheritdoc cref="System.Int32.ToString()" />
    public override global::System.String ToString() => Value.ToString();

        
        class internal_sealed_partial_recordConversions_NewtonsoftJsonSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<internal_sealed_partial_recordConversions_NewtonsoftJson>
        {
            public override internal_sealed_partial_recordConversions_NewtonsoftJson Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return internal_sealed_partial_recordConversions_NewtonsoftJson.Deserialize(reader.GetInt32());
            }

            public override void Write(System.Text.Json.Utf8JsonWriter writer, internal_sealed_partial_recordConversions_NewtonsoftJson value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WriteNumberValue(value.Value);
            }
        }

        class internal_sealed_partial_recordConversions_NewtonsoftJsonNewtonsoftJsonConverter : Newtonsoft.Json.JsonConverter
        {
            public override bool CanConvert(System.Type objectType)
            {
                return objectType == typeof(internal_sealed_partial_recordConversions_NewtonsoftJson);
            }

            public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
            {
                var id = (internal_sealed_partial_recordConversions_NewtonsoftJson)value;
                serializer.Serialize(writer, id.Value);
            }

            public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
            {
                var result = serializer.Deserialize<global::System.Int32?>(reader);
                return result.HasValue ? internal_sealed_partial_recordConversions_NewtonsoftJson.Deserialize(result.Value) : null;
            }
        }






        internal sealed class internal_sealed_partial_recordConversions_NewtonsoftJsonDebugView
        {
            private readonly internal_sealed_partial_recordConversions_NewtonsoftJson _t;

            internal_sealed_partial_recordConversions_NewtonsoftJsonDebugView(internal_sealed_partial_recordConversions_NewtonsoftJson t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "System.Int32";
            public System.Int32 Value => _t.Value ;

            public global::System.String Conversions => @"[global::System.Text.Json.Serialization.JsonConverter(typeof(internal_sealed_partial_recordConversions_NewtonsoftJsonSystemTextJsonConverter))]
[global::Newtonsoft.Json.JsonConverter(typeof(internal_sealed_partial_recordConversions_NewtonsoftJsonNewtonsoftJsonConverter))]
";
                }
    }
}