[  
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618
// Suppress warnings for 'Override methods on comparable types'.
#pragma warning disable CA1036
// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators
#pragma warning disable MA0097
// Suppress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669, CS8632
#pragma warning disable CS8604 // Possible null reference argument.

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591
namespace generator
{
    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
        [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    public class VogenTypesFactory : global::System.Text.Json.Serialization.JsonConverterFactory
    {
        public VogenTypesFactory()
        {
        }

        private static readonly global::System.Collections.Generic.Dictionary<global::System.Type, global::System.Lazy<global::System.Text.Json.Serialization.JsonConverter>> _lookup = new global::System.Collections.Generic.Dictionary<global::System.Type, global::System.Lazy<global::System.Text.Json.Serialization.JsonConverter>>
        {
            {
                typeof(MyVo),
                new global::System.Lazy<global::System.Text.Json.Serialization.JsonConverter>(() => new MyVo.MyVoSystemTextJsonConverter())
            }
        };
        public override bool CanConvert(global::System.Type typeToConvert) => _lookup.ContainsKey(typeToConvert);
        public override global::System.Text.Json.Serialization.JsonConverter CreateConverter(global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options) => _lookup[typeToConvert].Value;
    }
}
  
// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------
// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618
// Suppress warnings for 'Override methods on comparable types'.
#pragma warning disable CA1036
// Suppress Error MA0097 : A class that implements IComparable<T> or IComparable should override comparison operators
#pragma warning disable MA0097
// Suppress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669, CS8632
#pragma warning disable CS8604 // Possible null reference argument.

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591
[global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage]
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
[global::System.Text.Json.Serialization.JsonConverter(typeof(MyVoSystemTextJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(MyVoTypeConverter))]
[global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(MyVoDebugView))]
[global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: C<System.Int32>, Value = { _value }")]
public partial class MyVo : global::System.IEquatable<MyVo>, global::System.IEquatable<C<System.Int32>>
{
#if DEBUG
private readonly global::System.Diagnostics.StackTrace _stackTrace  = null!;
#endif
#if !VOGEN_NO_VALIDATION
    private readonly global::System.Boolean _isInitialized;
#endif
    private readonly C<System.Int32> _value;
    /// <summary>
    /// Gets the underlying <see cref = "C{T}"/> value if set, otherwise a <see cref = "Vogen.ValueObjectValidationException"/> is thrown.
    /// </summary>
    public C<System.Int32> Value
    {
        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
        get
        {
            EnsureInitialized();
            return _value;
        }
    }

    [global::System.Diagnostics.DebuggerStepThroughAttribute]
    [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
    public MyVo()
    {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
#if !VOGEN_NO_VALIDATION
        _isInitialized = false;
#endif
        _value = default;
    }

    [global::System.Diagnostics.DebuggerStepThroughAttribute]
    private MyVo(C<System.Int32> value)
    {
        _value = value;
#if !VOGEN_NO_VALIDATION
        _isInitialized = true;
#endif
    }

    /// <summary>
    /// Builds an instance from the provided underlying type.
    /// </summary>
    /// <param name = "value">The underlying type.</param>
    /// <returns>An instance of this type.</returns>
    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
    public static MyVo From(C<System.Int32> value)
    {
        if (value is null)
        {
            ThrowHelper.ThrowWhenCreatedWithNull();
            return default !;
        }

        return new MyVo(value);
    }

    /// <summary>
    /// Tries to build an instance from the provided underlying type.
    /// If a normalization method is provided, it will be called.
    /// If validation is provided, and it fails, false will be returned.
    /// </summary>
    /// <param name = "value">The underlying type.</param>
    /// <param name = "vo">An instance of the value object.</param>
    /// <returns>True if the value object can be built, otherwise false.</returns>
    
#pragma warning disable CS8767 // Nullability of reference types in type of parameter doesn't match implicitly implemented member because of nullability attributes.

    public static bool TryFrom(
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.NotNullWhen(true)]
#endif
    C<System.Int32> value, 
#if NETCOREAPP3_0_OR_GREATER
[global::System.Diagnostics.CodeAnalysis.MaybeNullWhen(false)]
#endif
    out MyVo vo)
#pragma warning restore CS8767 // Nullability of reference types in type of parameter doesn't match implicitly implemented member because of nullability attributes.

    {
        if (value is null)
        {
            vo = default;
            return false;
        }

        vo = new MyVo(value);
        return true;
    }

    /// <summary>
    /// Tries to build an instance from the provided underlying value.
    /// If a normalization method is provided, it will be called.
    /// If validation is provided, and it fails, an error will be returned.
    /// </summary>
    /// <param name = "value">The primitive value.</param>
    /// <returns>A <see cref = "Vogen.ValueObjectOrError{T}"/> containing either the value object, or an error.</returns>
    public static Vogen.ValueObjectOrError<MyVo> TryFrom(C<System.Int32> value)
    {
        if (value is null)
        {
            return new Vogen.ValueObjectOrError<MyVo>(Vogen.Validation.Invalid("The value provided was null"));
        }

        return new Vogen.ValueObjectOrError<MyVo>(new MyVo(value));
    }

    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
#if VOGEN_NO_VALIDATION
#pragma warning disable CS8775
  public bool IsInitialized() => true;
#pragma warning restore CS8775
#else
    public bool IsInitialized() => _isInitialized;
#endif
    // only called internally when something has been deserialized into
    // its primitive type.
    private static MyVo __Deserialize(C<System.Int32> value)
    {
        if (value is null)
        {
            ThrowHelper.ThrowWhenCreatedWithNull();
            return default !;
        }

        return new MyVo(value);
    }

    public global::System.Boolean Equals(MyVo other)
    {
        if (ReferenceEquals(null, other))
        {
            return false;
        }

        // It's possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.
        // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.
        if (!IsInitialized() || !other.IsInitialized())
            return false;
        if (ReferenceEquals(this, other))
        {
            return true;
        }

        return GetType() == other.GetType() && global::System.Collections.Generic.EqualityComparer<C<System.Int32>>.Default.Equals(Value, other.Value);
    }

    public global::System.Boolean Equals(MyVo other, global::System.Collections.Generic.IEqualityComparer<MyVo> comparer)
    {
        return comparer.Equals(this, other);
    }

    public global::System.Boolean Equals(C<System.Int32> primitive)
    {
        return Value.Equals(primitive);
    }

    public override global::System.Boolean Equals(global::System.Object obj)
    {
        return Equals(obj as MyVo);
    }

    public static global::System.Boolean operator ==(MyVo left, MyVo right) => Equals(left, right);
    public static global::System.Boolean operator !=(MyVo left, MyVo right) => !Equals(left, right);
    public static global::System.Boolean operator ==(MyVo left, C<System.Int32> right) => left.Value.Equals(right);
    public static global::System.Boolean operator ==(C<System.Int32> left, MyVo right) => right.Value.Equals(left);
    public static global::System.Boolean operator !=(C<System.Int32> left, MyVo right) => !(left == right);
    public static global::System.Boolean operator !=(MyVo left, C<System.Int32> right) => !(left == right);
    public static explicit operator MyVo(C<System.Int32> value) => From(value);
    public static explicit operator C<System.Int32>(MyVo value) => value.Value;
#nullable disable
#nullable restore
    public override global::System.Int32 GetHashCode()
    {
        unchecked // Overflow is fine, just wrap
        {
            global::System.Int32 hash = (global::System.Int32)2166136261;
            hash = (hash * 16777619) ^ GetType().GetHashCode();
            hash = (hash * 16777619) ^ global::System.Collections.Generic.EqualityComparer<C<System.Int32>>.Default.GetHashCode(Value);
            return hash;
        }
    }

    /// <summary>
    /// Returns the wrapped primitive's ToString representation.
    /// </summary>
    /// <returns>
    /// If this instance hasn't been initialised, it will return "[UNINITIALIZED]". Otherwise the wrapped primitive's ToString representation.
    /// </returns>
    public override global::System.String ToString() => IsInitialized() ? Value.ToString() ?? "" : "[UNINITIALIZED]";
    [global::System.Runtime.CompilerServices.MethodImpl(global::System.Runtime.CompilerServices.MethodImplOptions.AggressiveInlining)]
    private void EnsureInitialized()
    {
        if (!IsInitialized())
        {
#if DEBUG
               ThrowHelper.ThrowWhenNotInitialized(_stackTrace);
#else
            ThrowHelper.ThrowWhenNotInitialized();
#endif
        }
    }

#nullable disable
    /// <summary>
    /// Converts a MyVo to or from JSON.
    /// </summary>
    public partial class MyVoSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<MyVo>
    {
        public override MyVo Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
        {
            var primitive = global::System.Text.Json.JsonSerializer.Deserialize<C<System.Int32>>(ref reader, options);
            return DeserializeJson(primitive);
        }

        public override void Write(System.Text.Json.Utf8JsonWriter writer, MyVo value, global::System.Text.Json.JsonSerializerOptions options)
        {
            global::System.Text.Json.JsonSerializer.Serialize(writer, value.Value, options);
        }

#if NET6_0_OR_GREATER
            public override MyVo ReadAsPropertyName(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                var primitive = global::System.Text.Json.JsonSerializer.Deserialize<C<System.Int32>>(ref reader, options);
                return DeserializeJson(primitive);
            }

            public override void WriteAsPropertyName(System.Text.Json.Utf8JsonWriter writer, MyVo value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WritePropertyName(global::System.Text.Json.JsonSerializer.Serialize(value.Value));
            }
#endif
#if NETCOREAPP3_0_OR_GREATER
            [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        private static void ThrowJsonExceptionWhenValidationFails(Vogen.Validation validation)
        {
            var e = ThrowHelper.CreateValidationException(validation);
            throw new global::System.Text.Json.JsonException(null, e);
        }

        private static void ThrowJsonExceptionWhenNull(C<System.Int32> value)
        {
            if (value == null)
            {
                var e = ThrowHelper.CreateCannotBeNullException();
                throw new global::System.Text.Json.JsonException(null, e);
            }
        }

        private static MyVo DeserializeJson(C<System.Int32> value)
        {
            ThrowJsonExceptionWhenNull(value);
            return new MyVo(value);
        }
    }

#nullable restore
#nullable disable
    class MyVoTypeConverter : global::System.ComponentModel.TypeConverter
    {
        public override global::System.Boolean CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
        {
            return sourceType == typeof(C<System.Int32>);
        }

        public override global::System.Object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value)
        {
            C<System.Int32> ut = (C<System.Int32>)value;
            return MyVo.__Deserialize(ut);
        }

        public override bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
        {
            return sourceType == typeof(C<System.Int32>);
        }

        public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value, global::System.Type destinationType)
        {
            if (value is MyVo idValue)
            {
                return idValue.Value;
            }

            return base.ConvertTo(context, culture, value, destinationType);
        }
    }

#nullable restore
    internal sealed class MyVoDebugView
    {
        private readonly MyVo _t;
        MyVoDebugView(MyVo t)
        {
            _t = t;
        }

        public global::System.String UnderlyingType => "C<System.Int32>";
        public C<System.Int32> Value => _t.Value;
        public global::System.String Conversions => @"[global::System.Text.Json.Serialization.JsonConverter(typeof(MyVoSystemTextJsonConverter))]
[global::System.ComponentModel.TypeConverter(typeof(MyVoTypeConverter))]
";
    }

    static class ThrowHelper
    {
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowInvalidOperationException(string message) => throw new global::System.InvalidOperationException(message);
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowArgumentException(string message, string arg) => throw new global::System.ArgumentException(message, arg);
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenCreatedWithNull() => throw CreateCannotBeNullException();
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenNotInitialized() => throw CreateValidationException("Use of uninitialized Value Object.");
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenNotInitialized(global::System.Diagnostics.StackTrace stackTrace) => throw CreateValidationException("Use of uninitialized Value Object at: " + stackTrace ?? "");
#if NETCOREAPP3_0_OR_GREATER
    [global::System.Diagnostics.CodeAnalysis.DoesNotReturnAttribute]
#endif
        internal static void ThrowWhenValidationFails(Vogen.Validation validation)
        {
            throw CreateValidationException(validation);
        }

        internal static System.Exception CreateValidationException(string message) => new global::Vogen.ValueObjectValidationException(message);
        internal static System.Exception CreateCannotBeNullException() => new global::Vogen.ValueObjectValidationException("Cannot create a value object with null.");
        internal static System.Exception CreateValidationException(Vogen.Validation validation)
        {
            var ex = CreateValidationException(validation.ErrorMessage);
            if (validation.Data != null)
            {
                foreach (var kvp in validation.Data)
                {
                    ex.Data[kvp.Key] = kvp.Value;
                }
            }

            return ex;
        }
    }
}
]