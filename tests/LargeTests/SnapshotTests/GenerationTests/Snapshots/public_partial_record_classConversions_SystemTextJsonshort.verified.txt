// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

using Vogen;

namespace Whatever
{

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.Text.Json.Serialization.JsonConverter(typeof(public_partial_record_classConversions_SystemTextJsonshortSystemTextJsonConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(public_partial_record_classConversions_SystemTextJsonshortDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: short, Value = { _value }")]
    public partial record class public_partial_record_classConversions_SystemTextJsonshort
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly short _value;
        
public short Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            init
            {
                

                

                

                _value = value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public public_partial_record_classConversions_SystemTextJsonshort()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private public_partial_record_classConversions_SystemTextJsonshort(short value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static public_partial_record_classConversions_SystemTextJsonshort From(short value)
        {
            

            

            public_partial_record_classConversions_SystemTextJsonshort instance = new public_partial_record_classConversions_SystemTextJsonshort(value);

            

            return instance;
        }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        // record enumerates fields - we just want our Value and to throw if it's not initialized.
        public override global::System.String ToString() => Value.ToString();

        
        class public_partial_record_classConversions_SystemTextJsonshortSystemTextJsonConverter : global::System.Text.Json.Serialization.JsonConverter<public_partial_record_classConversions_SystemTextJsonshort>
        {
            public override public_partial_record_classConversions_SystemTextJsonshort Read(ref global::System.Text.Json.Utf8JsonReader reader, global::System.Type typeToConvert, global::System.Text.Json.JsonSerializerOptions options)
            {
                return public_partial_record_classConversions_SystemTextJsonshort.From(reader.GetInt16());
            }

            public override void Write(System.Text.Json.Utf8JsonWriter writer, public_partial_record_classConversions_SystemTextJsonshort value, global::System.Text.Json.JsonSerializerOptions options)
            {
                writer.WriteNumberValue(value.Value);
            }
        }







        internal sealed class public_partial_record_classConversions_SystemTextJsonshortDebugView
        {
            private readonly public_partial_record_classConversions_SystemTextJsonshort _t;

            public_partial_record_classConversions_SystemTextJsonshortDebugView(public_partial_record_classConversions_SystemTextJsonshort t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "System.Int16";
            public System.Int16 Value => _t.Value ;

            public global::System.String Conversions => @"[global::System.Text.Json.Serialization.JsonConverter(typeof(public_partial_record_classConversions_SystemTextJsonshortSystemTextJsonConverter))]
";
                }
    }
}