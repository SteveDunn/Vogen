// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

using Vogen;

namespace @class
{

    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::System.ComponentModel.TypeConverter(typeof(escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyteTypeConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyteDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: byte, Value = { _value }")]
    internal sealed partial record class escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly byte _value;
        
public byte Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            init
            {
                

                

                

                _value = value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte(byte value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte From(byte value)
        {
            

            

            escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte instance = new escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte(value);

            

            return instance;
        }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        // record enumerates fields - we just want our Value and to throw if it's not initialized.
        public override global::System.String ToString() => Value.ToString();

        


        class escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyteTypeConverter : global::System.ComponentModel.TypeConverter
        {
            public override global::System.Boolean CanConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(global::System.Byte) || sourceType == typeof(global::System.String) || base.CanConvertFrom(context, sourceType);
            }

            public override global::System.Object ConvertFrom(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value)
            {
                return value switch
                {
                    global::System.Byte byteValue => escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte.From(byteValue),
                    global::System.Int16 shortValue => escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte.From((global::System.Byte)shortValue),
                    global::System.Int32 intValue => escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte.From((global::System.Byte)intValue),
                    global::System.Int64 longValue => escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte.From((global::System.Byte)longValue),
                    global::System.String stringValue when  !global::System.String.IsNullOrEmpty(stringValue) && global::System.Byte.TryParse(stringValue, out var result) => escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte.From(result),
                    _ => base.ConvertFrom(context, culture, value),
                };
            }

            public override bool CanConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Type sourceType)
            {
                return sourceType == typeof(global::System.Byte) || sourceType == typeof(global::System.String) || base.CanConvertTo(context, sourceType);
            }

            public override object ConvertTo(global::System.ComponentModel.ITypeDescriptorContext context, global::System.Globalization.CultureInfo culture, global::System.Object value, global::System.Type destinationType)
            {
                if (value is escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte idValue)
                {
                    if (destinationType == typeof(global::System.Byte))
                    {
                        return idValue.Value;
                    }

                    if (destinationType == typeof(global::System.String))
                    {
                        return idValue.Value.ToString();
                    }
                }

                return base.ConvertTo(context, culture, value, destinationType);
            }
        }





        internal sealed class escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyteDebugView
        {
            private readonly escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte _t;

            escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyteDebugView(escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyte t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "System.Byte";
            public System.Byte Value => _t.Value ;

            public global::System.String Conversions => @"[global::System.ComponentModel.TypeConverter(typeof(escapedTestsinternal_sealed_partial_record_classConversions_TypeConverterbyteTypeConverter))]
";
                }
    }
}