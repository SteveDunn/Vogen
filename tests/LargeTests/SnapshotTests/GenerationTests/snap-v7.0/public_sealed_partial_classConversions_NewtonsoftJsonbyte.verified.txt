// ------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a source generator named Vogen (https://github.com/SteveDunn/Vogen)
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
// ------------------------------------------------------------------------------

// Suppress warnings about [Obsolete] member usage in generated code.
#pragma warning disable CS0618

// Supress warning for 'The annotation for nullable reference types should only be used in code within a '#nullable' annotations context. Auto-generated code requires an explicit '#nullable' directive in source.'
// The generator copies signatures from the BCL, e.g. for `TryParse`, and some of those have nullable annotations.
#pragma warning disable CS8669

// Suppress warnings about CS1591: Missing XML comment for publicly visible type or member 'Type_or_Member'
#pragma warning disable CS1591

using Vogen;

namespace Whatever
{

    [global::System.Diagnostics.CodeAnalysis.ExcludeFromCodeCoverage] 
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("Vogen", "1.0.0.0")]
    [global::Newtonsoft.Json.JsonConverter(typeof(public_sealed_partial_classConversions_NewtonsoftJsonbyteNewtonsoftJsonConverter))]

    [global::System.Diagnostics.DebuggerTypeProxyAttribute(typeof(public_sealed_partial_classConversions_NewtonsoftJsonbyteDebugView))]
    [global::System.Diagnostics.DebuggerDisplayAttribute("Underlying type: System.Byte, Value = { _value }")]
    public sealed partial class public_sealed_partial_classConversions_NewtonsoftJsonbyte : global::System.IEquatable<public_sealed_partial_classConversions_NewtonsoftJsonbyte>, global::System.IEquatable<System.Byte> ,  global::System.IComparable<public_sealed_partial_classConversions_NewtonsoftJsonbyte>
    {
#if DEBUG    
        private readonly global::System.Diagnostics.StackTrace _stackTrace = null;
#endif
        private readonly global::System.Boolean _isInitialized;
        private readonly System.Byte _value;
        
/// <summary>
/// Gets the underlying <see cref="System.Byte" /> value if set, otherwise a <see cref="ValueObjectValidationException" /> is thrown.
/// </summary>
public System.Byte Value
        {
            [global::System.Diagnostics.DebuggerStepThroughAttribute]
            get
            {
                EnsureInitialized();
                return _value;
            }
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        [global::System.ComponentModel.EditorBrowsable(global::System.ComponentModel.EditorBrowsableState.Never)]
        public public_sealed_partial_classConversions_NewtonsoftJsonbyte()
        {
#if DEBUG
            _stackTrace = new global::System.Diagnostics.StackTrace();
#endif
            _isInitialized = false;
            _value = default;
        }

        [global::System.Diagnostics.DebuggerStepThroughAttribute]
        private public_sealed_partial_classConversions_NewtonsoftJsonbyte(System.Byte value)
        {
            _value = value;
            _isInitialized = true;
        }

        /// <summary>
        /// Builds an instance from the provided underlying type.
        /// </summary>
        /// <param name="value">The underlying type.</param>
        /// <returns>An instance of this type.</returns>
        public static public_sealed_partial_classConversions_NewtonsoftJsonbyte From(System.Byte value)
        {
            

            

            public_sealed_partial_classConversions_NewtonsoftJsonbyte instance = new public_sealed_partial_classConversions_NewtonsoftJsonbyte(value);

            

            return instance;
        }

        // only called internally when something has been deserialized into
        // its primitive type.
        private static public_sealed_partial_classConversions_NewtonsoftJsonbyte Deserialize(System.Byte value)
        {
            

            

            

            return new public_sealed_partial_classConversions_NewtonsoftJsonbyte(value);
        }

        public global::System.Boolean Equals(public_sealed_partial_classConversions_NewtonsoftJsonbyte other)
        {
            if (ReferenceEquals(null, other))
            {
                return false;
            }

            // It's possible to create uninitialized instances via converters such as EfCore (HasDefaultValue), which call Equals.
            // We treat anything uninitialized as not equal to anything, even other uninitialized instances of this type.
            if(!_isInitialized || !other._isInitialized) return false;
	    	
            if (ReferenceEquals(this, other))
            {
                return true;
            }

            return GetType() == other.GetType() && global::System.Collections.Generic.EqualityComparer<System.Byte>.Default.Equals(Value, other.Value);
        }

        public global::System.Boolean Equals(System.Byte primitive) => Value.Equals(primitive);

        public override global::System.Boolean Equals(global::System.Object obj)
        {
            if (ReferenceEquals(null, obj))
            {
                return false;
            }

            if (ReferenceEquals(this, obj))
            {
                return true;
            }

            if (obj.GetType() != GetType())
            {
                return false;
            }

            return Equals((public_sealed_partial_classConversions_NewtonsoftJsonbyte) obj);
        }

        public static global::System.Boolean operator ==(public_sealed_partial_classConversions_NewtonsoftJsonbyte left, public_sealed_partial_classConversions_NewtonsoftJsonbyte right) => Equals(left, right);
        public static global::System.Boolean operator !=(public_sealed_partial_classConversions_NewtonsoftJsonbyte left, public_sealed_partial_classConversions_NewtonsoftJsonbyte right) => !Equals(left, right);

        public static global::System.Boolean operator ==(public_sealed_partial_classConversions_NewtonsoftJsonbyte left, System.Byte right) => Equals(left.Value, right);
        public static global::System.Boolean operator !=(public_sealed_partial_classConversions_NewtonsoftJsonbyte left, System.Byte right) => !Equals(left.Value, right);

        public static global::System.Boolean operator ==(System.Byte left, public_sealed_partial_classConversions_NewtonsoftJsonbyte right) => Equals(left, right.Value);
        public static global::System.Boolean operator !=(System.Byte left, public_sealed_partial_classConversions_NewtonsoftJsonbyte right) => !Equals(left, right.Value);

        public static explicit operator public_sealed_partial_classConversions_NewtonsoftJsonbyte(System.Byte value) => From(value);
        public static explicit operator System.Byte(public_sealed_partial_classConversions_NewtonsoftJsonbyte value) => value.Value;

        public int CompareTo(public_sealed_partial_classConversions_NewtonsoftJsonbyte other) => Value.CompareTo(other.Value);

        public override global::System.Int32 GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                global::System.Int32 hash = (global::System.Int32) 2166136261;
                hash = (hash * 16777619) ^ Value.GetHashCode();
                hash = (hash * 16777619) ^ GetType().GetHashCode();
                hash = (hash * 16777619) ^ global::System.Collections.Generic.EqualityComparer<System.Byte>.Default.GetHashCode();
                return hash;
            }
        }

        private void EnsureInitialized()
        {
            if (!_isInitialized)
            {
#if DEBUG
                global::System.String message = "Use of uninitialized Value Object at: " + _stackTrace ?? "";
#else
                global::System.String message = "Use of uninitialized Value Object.";
#endif

                throw new global::Vogen.ValueObjectValidationException(message);
            }
        }


        

        /// <summary>Returns the string representation of the underlying <see cref="System.Byte" />.</summary>
    /// <inheritdoc cref="System.Byte.ToString()" />
    public override global::System.String ToString() => Value.ToString();

        

        class public_sealed_partial_classConversions_NewtonsoftJsonbyteNewtonsoftJsonConverter : Newtonsoft.Json.JsonConverter
        {
            public override bool CanConvert(System.Type objectType)
            {
                return objectType == typeof(public_sealed_partial_classConversions_NewtonsoftJsonbyte);
            }

            public override void WriteJson(Newtonsoft.Json.JsonWriter writer, object value, Newtonsoft.Json.JsonSerializer serializer)
            {
                var id = (public_sealed_partial_classConversions_NewtonsoftJsonbyte)value;
                serializer.Serialize(writer, id.Value);
            }

            public override object ReadJson(Newtonsoft.Json.JsonReader reader, System.Type objectType, object existingValue, Newtonsoft.Json.JsonSerializer serializer)
            {
                var result = serializer.Deserialize<global::System.Byte?>(reader);
                return result.HasValue ? public_sealed_partial_classConversions_NewtonsoftJsonbyte.Deserialize(result.Value) : null;
            }
        }






        internal sealed class public_sealed_partial_classConversions_NewtonsoftJsonbyteDebugView
        {
            private readonly public_sealed_partial_classConversions_NewtonsoftJsonbyte _t;

            public_sealed_partial_classConversions_NewtonsoftJsonbyteDebugView(public_sealed_partial_classConversions_NewtonsoftJsonbyte t)
            {
                _t = t;
            }

            public global::System.String UnderlyingType => "System.Byte";
            public System.Byte Value => _t.Value ;

            public global::System.String Conversions => @"[global::Newtonsoft.Json.JsonConverter(typeof(public_sealed_partial_classConversions_NewtonsoftJsonbyteNewtonsoftJsonConverter))]
";
                }
    }
}